{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Chatterino Wiki This wiki provides information for Chatterino .","title":"Chatterino Wiki"},{"location":"#chatterino-wiki","text":"This wiki provides information for Chatterino .","title":"Chatterino Wiki"},{"location":"Commands/","text":"Commands Commands are used as shortcuts for long messages. If a message starts with the \"trigger\" then the message will be replaced with the Command. Example Add Command Hello chat :) with the trigger /hello . Now typing /hello in chat will send Hello chat :) instead of /hello . Advanced The trigger has to be matched at the start of the message but there is a setting to also match them at the end . Triggers don't need to start with / Using placeholders {1} , {2} , {3} and so on can be used to insert the 1st, 2nd, 3rd, ... word after the trigger. Example: Add Command /timeout {1} 1 with trigger /warn . Now typing /warn user123 will send /timeout user123 1 Similarly {1+} and so on can be used to insert all words starting with the 1st, ... word. Example: Add Command Have a {1+} day! with trigger /day . Now typing /day very super nice will send Have a very super nice day! You can use {{1} if you want to send {1} literally.","title":"Commands"},{"location":"Commands/#commands","text":"Commands are used as shortcuts for long messages. If a message starts with the \"trigger\" then the message will be replaced with the Command.","title":"Commands"},{"location":"Commands/#example","text":"Add Command Hello chat :) with the trigger /hello . Now typing /hello in chat will send Hello chat :) instead of /hello .","title":"Example"},{"location":"Commands/#advanced","text":"The trigger has to be matched at the start of the message but there is a setting to also match them at the end . Triggers don't need to start with /","title":"Advanced"},{"location":"Commands/#using-placeholders","text":"{1} , {2} , {3} and so on can be used to insert the 1st, 2nd, 3rd, ... word after the trigger. Example: Add Command /timeout {1} 1 with trigger /warn . Now typing /warn user123 will send /timeout user123 1 Similarly {1+} and so on can be used to insert all words starting with the 1st, ... word. Example: Add Command Have a {1+} day! with trigger /day . Now typing /day very super nice will send Have a very super nice day! You can use {{1} if you want to send {1} literally.","title":"Using placeholders"},{"location":"Contributing%20for%20Developers/","text":"Contribution Guidelines This is a set of guidelines for contributing to Chatterino. The goal is to teach programmers without C++ background (java/python/etc.), people who haven't used Qt or otherwise have different experience the idioms of the codebase. Thus we will focus on those which are different from those other environments. There are extra guidelines available here but they are considered as extras and not as important. Tooling Formatting Code is automatically formatted using clang-format . It takes the burden off of the programmer and ensures that all contributors use the same style (even if mess something up accidentally). We recommend that you set up automatic formatting on file save in your editor. Comments Comments should only be used to: Increase readability (e.g. grouping member variables). Containing information that can't be expressed in code. Try to structure your code so that comments are not required. Good example /// Result is 0 if a == b, negative if a < b and positive if b > a. /// ^^^ You can't know this from the function signature! // Even better: Return a \"strong ordering\" type. // (but we don't have such a type right now) int compare(const QString &a, const QString &b); Bad example /* * Matches a link and returns boost::none if it failed and a * QRegularExpressionMatch on success. * ^^^ This comment just repeats the function signature!!! * * @param text The text that will be checked if it contains a * link * ^^^ No need to repeat the obvious. */ boost::optional<QRegularExpressionMatch> matchLink(const QString &text); Code Arithmetic Types Arithmetic types (like char, short, int, long, float and double), bool, and pointers are NOT initialized by default in c++. They keep whatever value is already at their position in the memory. This makes debugging harder and is unpredictable, so we initialize them to zero by using {} after their name when declaring them. class ArithmeticTypes { int thisIs0{}; QWidget *thisIsNull{}; bool thisIsFalse_{}; // int a; // <- Initialized to \"random\" value. // QWidget *randomPtr. std::vector<int> myVec; // <- other types call constructors instead, so no need for {} // std::vector<int> myVec{}; <- pointless {} int thisIs5 = 5; // <- Also fine, we initialize it with another value. }; void myFunc() { int a = 1 + 1; // <- here we initialize it immediately, so it's fine. } Passing parameters The way a parameter is passed signals how it is going to be used inside of the function. C++ doesn't have multiple return values so there is \"out parameters\" (reference to a variable that is going to be assigned inside of the function) to simulate multiple return values. Cheap to copy types like int/enum/etc. can be passed in per value since copying them is fast. void setValue(int value) { // ... } References mean that the variable doesn't need to be copied when it is passed to a function. type meaning const Type& name in Parameter. It is NOT going to be modified and may be copied inside of the function. Type& name out or in+out Parmameter. It will be modified. Pointers signal that objects are managed manually. While the above are only guaranteed to live as long as the function call (= don't store and use later) these may have more complex lifetimes. type meaning Type* name The lifetime of the parameter may exceed the length of the function call. It may use the QObject parent/children system. R-value references && work similar to regular references but signal the parameter should be \"consumed\". void storeLargeObject(LargeObject &&object) { // ... } void storeObject(std::unique_ptr<Object> &&object) { // ... } void main() { // initialize a large object (= will be expensive to copy) LargeObject large = // ... // Object accepts an r-value reference + we use std::move() // => We move the object = no need to copy. storeLargeObject(std::move(large)); // But even worse, you can't copy a unique_ptr so we need to move here! std::unique_ptr<Object> unique = // ... storeObject(std::move(unique)); // The pointer contained by unique has now been consumed by \"storeObject\" // so it just holds a null pointer now. assert(unique.get() == nullptr); } Generally the lowest level of requirement should be used e.g. passing Channel& instead of std::shared_ptr<Channel>& (aka ChannelPtr ) if possible. Members All functions names are in camelCase . Private member variables are in camelCase_ (note the underscore at the end). We don't use the get prefix for getters. We mark functions as const if applicable . class NamedObject { public: const QString &name() const; // <- no \"get\" prefix. void setName(const QString &name); bool hasLongName() const; // <- \"has\" or \"is\" prefix is okay static void myStaticFunction(); // <- also lowercase QString publicName; private: // Private variables have \"_\" suffix. QString name_; // QString name; <- collides with name() function }; void myFreeStandingFunction(); // <- also lower case Casts Avoid c-style casts: (type)variable . Instead use explicit type casts: type(variable) Or use one of static_cast , const_cast and dynamic_cast Try to avoid reinterpret_cast unless necessary. void example() { float f = 123.456; int i = (int)f; // <- don't int i = int(f); // <- do Base* base = // ... Derived* derived = (Derived*)base; // <- don't Derived* derived = dynamic_cast<Derived*>(base); // <- do // Only use \"const_cast\" solved if using proper const correctness doesn't work. const int c = 123; ((int &)c) = 123; // <- don't const_cast<int &>(c) = 123; // <- do (but only sometimes) // \"reinterpret_cast\" is also only required in very rarely. int p = 123; float *pp = (float*)&p; float *pp = reinterpret_cast<float*>(&p); } This Always use this to refer to instance members to make it clear where we use either locals or members. class Test { void testFunc(int a); int testInt_{}; } Test::testFunc(int a) { // do this->testInt_ += 2; this->testFunc(); // don't testInt_ -= 123; testFunc(2); this->testFunc(testInt_ + 1); } Managing resources Regular classes Keep the element on the stack if possible. If you need a pointer or have complex ownership you should use one of these classes: - Use std::unique_ptr if the resource has a single owner. - Use std::shared_ptr if the resource has multiple owners. QObject classes Use the object tree to manage lifetime where possible. Objects are destroyed when their parent object is destroyed. If you have to explicitly delete an object use variable->deleteLater() instead of delete variable . This ensures that it will be deleted on the correct thread. If an object doesn't have a parent consider using std::unique_ptr<Type, DeleteLater> with DeleteLater from \"src/common/Common.hpp\". This will call deleteLater() on the pointer once it goes out of scope or the object is destroyed.","title":"Contribution Guidelines"},{"location":"Contributing%20for%20Developers/#contribution-guidelines","text":"This is a set of guidelines for contributing to Chatterino. The goal is to teach programmers without C++ background (java/python/etc.), people who haven't used Qt or otherwise have different experience the idioms of the codebase. Thus we will focus on those which are different from those other environments. There are extra guidelines available here but they are considered as extras and not as important.","title":"Contribution Guidelines"},{"location":"Contributing%20for%20Developers/#tooling","text":"","title":"Tooling"},{"location":"Contributing%20for%20Developers/#formatting","text":"Code is automatically formatted using clang-format . It takes the burden off of the programmer and ensures that all contributors use the same style (even if mess something up accidentally). We recommend that you set up automatic formatting on file save in your editor.","title":"Formatting"},{"location":"Contributing%20for%20Developers/#comments","text":"Comments should only be used to: Increase readability (e.g. grouping member variables). Containing information that can't be expressed in code. Try to structure your code so that comments are not required.","title":"Comments"},{"location":"Contributing%20for%20Developers/#good-example","text":"/// Result is 0 if a == b, negative if a < b and positive if b > a. /// ^^^ You can't know this from the function signature! // Even better: Return a \"strong ordering\" type. // (but we don't have such a type right now) int compare(const QString &a, const QString &b);","title":"Good example"},{"location":"Contributing%20for%20Developers/#bad-example","text":"/* * Matches a link and returns boost::none if it failed and a * QRegularExpressionMatch on success. * ^^^ This comment just repeats the function signature!!! * * @param text The text that will be checked if it contains a * link * ^^^ No need to repeat the obvious. */ boost::optional<QRegularExpressionMatch> matchLink(const QString &text);","title":"Bad example"},{"location":"Contributing%20for%20Developers/#code","text":"","title":"Code"},{"location":"Contributing%20for%20Developers/#arithmetic-types","text":"Arithmetic types (like char, short, int, long, float and double), bool, and pointers are NOT initialized by default in c++. They keep whatever value is already at their position in the memory. This makes debugging harder and is unpredictable, so we initialize them to zero by using {} after their name when declaring them. class ArithmeticTypes { int thisIs0{}; QWidget *thisIsNull{}; bool thisIsFalse_{}; // int a; // <- Initialized to \"random\" value. // QWidget *randomPtr. std::vector<int> myVec; // <- other types call constructors instead, so no need for {} // std::vector<int> myVec{}; <- pointless {} int thisIs5 = 5; // <- Also fine, we initialize it with another value. }; void myFunc() { int a = 1 + 1; // <- here we initialize it immediately, so it's fine. }","title":"Arithmetic Types"},{"location":"Contributing%20for%20Developers/#passing-parameters","text":"The way a parameter is passed signals how it is going to be used inside of the function. C++ doesn't have multiple return values so there is \"out parameters\" (reference to a variable that is going to be assigned inside of the function) to simulate multiple return values. Cheap to copy types like int/enum/etc. can be passed in per value since copying them is fast. void setValue(int value) { // ... } References mean that the variable doesn't need to be copied when it is passed to a function. type meaning const Type& name in Parameter. It is NOT going to be modified and may be copied inside of the function. Type& name out or in+out Parmameter. It will be modified. Pointers signal that objects are managed manually. While the above are only guaranteed to live as long as the function call (= don't store and use later) these may have more complex lifetimes. type meaning Type* name The lifetime of the parameter may exceed the length of the function call. It may use the QObject parent/children system. R-value references && work similar to regular references but signal the parameter should be \"consumed\". void storeLargeObject(LargeObject &&object) { // ... } void storeObject(std::unique_ptr<Object> &&object) { // ... } void main() { // initialize a large object (= will be expensive to copy) LargeObject large = // ... // Object accepts an r-value reference + we use std::move() // => We move the object = no need to copy. storeLargeObject(std::move(large)); // But even worse, you can't copy a unique_ptr so we need to move here! std::unique_ptr<Object> unique = // ... storeObject(std::move(unique)); // The pointer contained by unique has now been consumed by \"storeObject\" // so it just holds a null pointer now. assert(unique.get() == nullptr); } Generally the lowest level of requirement should be used e.g. passing Channel& instead of std::shared_ptr<Channel>& (aka ChannelPtr ) if possible.","title":"Passing parameters"},{"location":"Contributing%20for%20Developers/#members","text":"All functions names are in camelCase . Private member variables are in camelCase_ (note the underscore at the end). We don't use the get prefix for getters. We mark functions as const if applicable . class NamedObject { public: const QString &name() const; // <- no \"get\" prefix. void setName(const QString &name); bool hasLongName() const; // <- \"has\" or \"is\" prefix is okay static void myStaticFunction(); // <- also lowercase QString publicName; private: // Private variables have \"_\" suffix. QString name_; // QString name; <- collides with name() function }; void myFreeStandingFunction(); // <- also lower case","title":"Members"},{"location":"Contributing%20for%20Developers/#casts","text":"Avoid c-style casts: (type)variable . Instead use explicit type casts: type(variable) Or use one of static_cast , const_cast and dynamic_cast Try to avoid reinterpret_cast unless necessary. void example() { float f = 123.456; int i = (int)f; // <- don't int i = int(f); // <- do Base* base = // ... Derived* derived = (Derived*)base; // <- don't Derived* derived = dynamic_cast<Derived*>(base); // <- do // Only use \"const_cast\" solved if using proper const correctness doesn't work. const int c = 123; ((int &)c) = 123; // <- don't const_cast<int &>(c) = 123; // <- do (but only sometimes) // \"reinterpret_cast\" is also only required in very rarely. int p = 123; float *pp = (float*)&p; float *pp = reinterpret_cast<float*>(&p); }","title":"Casts"},{"location":"Contributing%20for%20Developers/#this","text":"Always use this to refer to instance members to make it clear where we use either locals or members. class Test { void testFunc(int a); int testInt_{}; } Test::testFunc(int a) { // do this->testInt_ += 2; this->testFunc(); // don't testInt_ -= 123; testFunc(2); this->testFunc(testInt_ + 1); }","title":"This"},{"location":"Contributing%20for%20Developers/#managing-resources","text":"","title":"Managing resources"},{"location":"Contributing%20for%20Developers/#regular-classes","text":"Keep the element on the stack if possible. If you need a pointer or have complex ownership you should use one of these classes: - Use std::unique_ptr if the resource has a single owner. - Use std::shared_ptr if the resource has multiple owners.","title":"Regular classes"},{"location":"Contributing%20for%20Developers/#qobject-classes","text":"Use the object tree to manage lifetime where possible. Objects are destroyed when their parent object is destroyed. If you have to explicitly delete an object use variable->deleteLater() instead of delete variable . This ensures that it will be deleted on the correct thread. If an object doesn't have a parent consider using std::unique_ptr<Type, DeleteLater> with DeleteLater from \"src/common/Common.hpp\". This will call deleteLater() on the pointer once it goes out of scope or the object is destroyed.","title":"QObject classes"},{"location":"Environment%20Variables/","text":"Environment Variables Below I have tried to list all environment variables that can be used to modify the behaviour of Chatterino. Used for things that I don't feel like fit in the settings system. CHATTERINO2_RECENT_MESSAGES_URL Used to change the URL that Chatterino2 uses when trying to load historic Twitch chat messages (if the setting is enabled). Default value: https://recent-messages.robotty.de/api/v2/recent-messages/%1 (an open-source service written and currently run by @RAnders00 - visit the homepage for more details about the service ) Arguments: - %1 = Name of the Twitch channel CHATTERINO2_LINK_RESOLVER_URL Used to change the URL that Chatterino2 uses when trying to get link information to display in the tooltip on hover. Default value: https://braize.pajlada.com/chatterino/link_resolver/%1 Arguments: - %1 = Escaped URL the link resolver should resolve CHATTERINO2_TWITCH_EMOTE_SET_RESOLVER_URL Used to change the URL that Chatterino2 uses when trying to get emote set information Default value: https://braize.pajlada.com/chatterino/twitchemotes/set/%1/ Arguments: - %1 = Emote set ID CHATTERINO2_TWITCH_SERVER_HOST String value used to change what Twitch chat server host to connect to. Default value: irc.chat.twitch.tv CHATTERINO2_TWITCH_SERVER_PORT Number value used to change what port to use when connecting to Twitch chat servers. Currently known valid ports for secure usage: 6697, 443. Currently known valid ports for non-secure usage (CHATTERINO2_TWITCH_SERVER_SECURE set to false): 6667, 80. Default value: 443 CHATTERINO2_TWITCH_SERVER_SECURE Bool value used to tell Chatterino whether to try to connect securely (secure irc) to the Twitch chat server. Default value: true","title":"Environment Variables"},{"location":"Environment%20Variables/#environment-variables","text":"Below I have tried to list all environment variables that can be used to modify the behaviour of Chatterino. Used for things that I don't feel like fit in the settings system.","title":"Environment Variables"},{"location":"Environment%20Variables/#chatterino2_recent_messages_url","text":"Used to change the URL that Chatterino2 uses when trying to load historic Twitch chat messages (if the setting is enabled). Default value: https://recent-messages.robotty.de/api/v2/recent-messages/%1 (an open-source service written and currently run by @RAnders00 - visit the homepage for more details about the service ) Arguments: - %1 = Name of the Twitch channel","title":"CHATTERINO2_RECENT_MESSAGES_URL"},{"location":"Environment%20Variables/#chatterino2_link_resolver_url","text":"Used to change the URL that Chatterino2 uses when trying to get link information to display in the tooltip on hover. Default value: https://braize.pajlada.com/chatterino/link_resolver/%1 Arguments: - %1 = Escaped URL the link resolver should resolve","title":"CHATTERINO2_LINK_RESOLVER_URL"},{"location":"Environment%20Variables/#chatterino2_twitch_emote_set_resolver_url","text":"Used to change the URL that Chatterino2 uses when trying to get emote set information Default value: https://braize.pajlada.com/chatterino/twitchemotes/set/%1/ Arguments: - %1 = Emote set ID","title":"CHATTERINO2_TWITCH_EMOTE_SET_RESOLVER_URL"},{"location":"Environment%20Variables/#chatterino2_twitch_server_host","text":"String value used to change what Twitch chat server host to connect to. Default value: irc.chat.twitch.tv","title":"CHATTERINO2_TWITCH_SERVER_HOST"},{"location":"Environment%20Variables/#chatterino2_twitch_server_port","text":"Number value used to change what port to use when connecting to Twitch chat servers. Currently known valid ports for secure usage: 6697, 443. Currently known valid ports for non-secure usage (CHATTERINO2_TWITCH_SERVER_SECURE set to false): 6667, 80. Default value: 443","title":"CHATTERINO2_TWITCH_SERVER_PORT"},{"location":"Environment%20Variables/#chatterino2_twitch_server_secure","text":"Bool value used to tell Chatterino whether to try to connect securely (secure irc) to the Twitch chat server. Default value: true","title":"CHATTERINO2_TWITCH_SERVER_SECURE"},{"location":"Filters/","text":"Introduction to Filters Filters can be applied to splits to provide a selective view of messages. Filters are created in the Settings page and are applied by opening the Split menu (three dots) and selecting \"Set filters\". Applied filters are saved when you close and open Chatterino. Multiple filters can be applied to a Split. A message must pass all applied filters for it to be displayed. Simple filters are available through the Channel Filter Creator dialog. Advanced filters take inspiration from many programming languages, and the full description of keywords and operators can be found below. Example filters message.content contains \"hello\" Only messages that contain the phrase hello message.length < 40 || author.subscribed Messages that are less than 40 characters log, OR are sent by a subscriber. channel.name == \"somestreamer\" && author.badges contains \"moderator\" Messages that originated in the channel somestreamer AND are from users with a moderator badge Filter syntax A filter must be a valid expression. An expression is comprised of conditions and values which are evaluated to a single True or False value to decide whether to filter a message. Evaluating to something other than True or False will lead to all messages being filtered out. Values A value can be an integer ( 123 , 5 ), a string ( \"hello\" , \"this is a string\" ), or a variable ( author.name , message.length ). When a filter is evaluated, variables are replaced with the values they represent. Literals: Name Example Int 123 , 5 String \"Hello there\" , \"Escaped \\\" quote\" Operators Binary operators act on two values: - 1 + 2 - author.subbed && flags.highlighted - \"long sentence\" contains \"ten\" Unary operators act on one value: - !author.subbed The following operators are available: Operator Description && And \\|\\| Or ! Not == Equals != Not equals < Less than <= Less than or equal to > Greater than >= Greater than or equal to contains String, List, or Map contains startswith String or List starts with text or string, respectively endswith String or List ends with text or string, respectively + Add (or string concatenation) - Subtract * Multiply / Divide (integer) % Modulus Variables The following variables are available: Variable Type Description Author User who sent the message author.badges List List of author's badges author.color Color* Color code of author, or none author.name String Display name of author author.no_color Bool Whether the author has no color set (i.e. gray name) author.subbed Bool Whether author is subscribed author.sub_length Int How long author has been subscribed (or zero) Channel The channel where the message was sent channel.name String Channel name channel.watching Bool Whether the channel is being watched (requires Chatterino extension) Flags Message-specific flags flags.highlighted Bool Whether the message is highlighted flags.points_redeemed Bool Whether the message was redeemed through channel points flags.sub_message Bool Whether the message is a sub/resub/gift message flags.system_message Bool Whether the message is a system message (i.e. timeout/ban/info) flags.whisper Bool Whether the message is a whisper Message Actual message sent message.content String Message content message.length Int Message length *Note: To compare a Color , compare it to a color hex code string: author.color == \"#FF0000\" Data types Generally, data types won't be much of an issue. However, mismatching datatypes can cause confusing results. For example: - \"abc\" + 123 == \"abc123\" but 123 + \"abc\" != \"123abc\" - 1 + \"2\" == 3 and 1 + \"2\" == \"3\" . Chatterino will try to transform incompatible types for operations, but it isn't always successful. If two types can't mix, False or 0 will be returned, depending on the context. Double check the table above to see the types of each variable to prevent unexpected results. About the order of operations The order of operations in filters may not be exactly what you expect. Expressions in parentheses are evaluated first Math operations are evaluated from left to right, not by MDAS. 2 + 3 * 4 yields 20 , not 14 . a && b || c && d is evaluated as (a && b) || (c && d) a || b && c || d is evaluated as a || (b && c) || d Basically, if you're unsure about the order of operations, use extra parentheses.","title":"Filters"},{"location":"Filters/#introduction-to-filters","text":"Filters can be applied to splits to provide a selective view of messages. Filters are created in the Settings page and are applied by opening the Split menu (three dots) and selecting \"Set filters\". Applied filters are saved when you close and open Chatterino. Multiple filters can be applied to a Split. A message must pass all applied filters for it to be displayed. Simple filters are available through the Channel Filter Creator dialog. Advanced filters take inspiration from many programming languages, and the full description of keywords and operators can be found below.","title":"Introduction to Filters"},{"location":"Filters/#example-filters","text":"message.content contains \"hello\" Only messages that contain the phrase hello message.length < 40 || author.subscribed Messages that are less than 40 characters log, OR are sent by a subscriber. channel.name == \"somestreamer\" && author.badges contains \"moderator\" Messages that originated in the channel somestreamer AND are from users with a moderator badge","title":"Example filters"},{"location":"Filters/#filter-syntax","text":"A filter must be a valid expression. An expression is comprised of conditions and values which are evaluated to a single True or False value to decide whether to filter a message. Evaluating to something other than True or False will lead to all messages being filtered out.","title":"Filter syntax"},{"location":"Filters/#values","text":"A value can be an integer ( 123 , 5 ), a string ( \"hello\" , \"this is a string\" ), or a variable ( author.name , message.length ). When a filter is evaluated, variables are replaced with the values they represent. Literals: Name Example Int 123 , 5 String \"Hello there\" , \"Escaped \\\" quote\"","title":"Values"},{"location":"Filters/#operators","text":"Binary operators act on two values: - 1 + 2 - author.subbed && flags.highlighted - \"long sentence\" contains \"ten\" Unary operators act on one value: - !author.subbed The following operators are available: Operator Description && And \\|\\| Or ! Not == Equals != Not equals < Less than <= Less than or equal to > Greater than >= Greater than or equal to contains String, List, or Map contains startswith String or List starts with text or string, respectively endswith String or List ends with text or string, respectively + Add (or string concatenation) - Subtract * Multiply / Divide (integer) % Modulus","title":"Operators"},{"location":"Filters/#variables","text":"The following variables are available: Variable Type Description Author User who sent the message author.badges List List of author's badges author.color Color* Color code of author, or none author.name String Display name of author author.no_color Bool Whether the author has no color set (i.e. gray name) author.subbed Bool Whether author is subscribed author.sub_length Int How long author has been subscribed (or zero) Channel The channel where the message was sent channel.name String Channel name channel.watching Bool Whether the channel is being watched (requires Chatterino extension) Flags Message-specific flags flags.highlighted Bool Whether the message is highlighted flags.points_redeemed Bool Whether the message was redeemed through channel points flags.sub_message Bool Whether the message is a sub/resub/gift message flags.system_message Bool Whether the message is a system message (i.e. timeout/ban/info) flags.whisper Bool Whether the message is a whisper Message Actual message sent message.content String Message content message.length Int Message length *Note: To compare a Color , compare it to a color hex code string: author.color == \"#FF0000\"","title":"Variables"},{"location":"Filters/#data-types","text":"Generally, data types won't be much of an issue. However, mismatching datatypes can cause confusing results. For example: - \"abc\" + 123 == \"abc123\" but 123 + \"abc\" != \"123abc\" - 1 + \"2\" == 3 and 1 + \"2\" == \"3\" . Chatterino will try to transform incompatible types for operations, but it isn't always successful. If two types can't mix, False or 0 will be returned, depending on the context. Double check the table above to see the types of each variable to prevent unexpected results.","title":"Data types"},{"location":"Filters/#about-the-order-of-operations","text":"The order of operations in filters may not be exactly what you expect. Expressions in parentheses are evaluated first Math operations are evaluated from left to right, not by MDAS. 2 + 3 * 4 yields 20 , not 14 . a && b || c && d is evaluated as (a && b) || (c && d) a || b && c || d is evaluated as a || (b && c) || d Basically, if you're unsure about the order of operations, use extra parentheses.","title":"About the order of operations"},{"location":"Help/","text":"Having issues with Chatterino or need general assistance? Check the below troubleshooting below corresponding to your operating system for assistance! Report a bug/issue | Make a feature suggestion | Join the Discord Basic troubleshooting Prior to starting on the below, you should first try the basic troubleshooting steps listed here. These steps can resolve a variety of issues: Ensure that your Chatterino is up to date. Ensure that you have BOTH the x86 and x64 Visual C++ Redistributables installed AND have restarted your PC after installation. Try running Chatterino in administrator mode. I am having an issue with the Chatterino extension Chatterino extension issues should be posted here . Chatterino not starting/Crashing upon startup Try running Chatterino in administrator mode. Adding Chatterino to your anti-virus/malware whitelist. If nothing else works, try resetting your settings using the Fresh Install option in the installer. Does using Chatterino accumulate Twitch channel points? Unfortunately not. This is a limitation due to Twitch using internal APIs for channel points. This will however work with most chatbots, as they simply take you being connected to chat as \"watching the stream\". Can I use Chatterino as my chat overlay for my stream? You definitely can, but it's not recommended. We suggest using a service similar to KapChat . Why are my messages being sent in webchat, but not in Chatterino? There's a few things to cover here: If your message is not sent in Chatterino, it is likely not sent in webchat either. Webchat renders messages whether they are sent or not, Chatterino will only render the message if it is accepted by the server. If you're trying to type in a chat where there are a lot of active chatters, then your message may be dropped by Twitch's chat servers (due to the volume). If an alt account has been banned in that chat, you have likely been shadowbanned by Twitch in that channel. Which prevents any of your other accounts from speaking in that channel. If you have spammed too much in another chat, you have likely been temporarily shadowbanned by Twitch in channels where you are not: Subscribed, VIP or Moderator. If all else fails, you may be having connection issues to Twitch or your network may be blocking the necessary IRC ports in order to connect. Chatterino is repeatedly dis/connecting from Twitch chat The most likely issue here is due to the large amount of channels you are connected to. The maximum channel limit is usually around the 100 mark, but may differ from user to user. I am unable to send whispers from Chatterino If you are getting the Your settings prevent you from sending this whisper error message, it may be due to: You turning on the Block Whispers from Strangers option in your Twitch account security settings . Your account is too new to be able to whisper strangers. If you wish to whisper a user, you must first add them as a friend. This was a spam protection measure put in place by Twitch. This is not a Chatterino bug. FFZ/BTTV emotes are not working You need to be logged in to see emotes. Try hitting F5 once to manually refresh the emotes. Chatterino only makes a connection to the necessary APIs to fetch these emotes, if you are still having issues fetching them, then your network may be blocking requests to those APIs. I have link information turned on, but am unable to see the information when hovering over a link The server (braize) used to fetch the link information may be down. Braize uptime can be found here . Your network may be having issues connecting to braize. Try restarting your PC and router. How do I get the supporter badge? Donate \u20ac10 to fourtf here . Login expired error If you're getting the Login expired for user <user>! Try adding your account again. error, simply re-add your account and it will start working again. How do I add Chatterino as an OBS dock? This is not natively supported, but there is a work around: Add a dock into OBS for standard Twitch chat Turn on Always on top in Chatterino Click the 3 dots up the top of a channel split and click Popup Move and resize the chat to overlay on top of the standard Twitch chat","title":"Help"},{"location":"Help/#basic-troubleshooting","text":"Prior to starting on the below, you should first try the basic troubleshooting steps listed here. These steps can resolve a variety of issues: Ensure that your Chatterino is up to date. Ensure that you have BOTH the x86 and x64 Visual C++ Redistributables installed AND have restarted your PC after installation. Try running Chatterino in administrator mode.","title":"Basic troubleshooting"},{"location":"Help/#i-am-having-an-issue-with-the-chatterino-extension","text":"Chatterino extension issues should be posted here .","title":"I am having an issue with the Chatterino extension"},{"location":"Help/#chatterino-not-startingcrashing-upon-startup","text":"Try running Chatterino in administrator mode. Adding Chatterino to your anti-virus/malware whitelist. If nothing else works, try resetting your settings using the Fresh Install option in the installer.","title":"Chatterino not starting/Crashing upon startup"},{"location":"Help/#does-using-chatterino-accumulate-twitch-channel-points","text":"Unfortunately not. This is a limitation due to Twitch using internal APIs for channel points. This will however work with most chatbots, as they simply take you being connected to chat as \"watching the stream\".","title":"Does using Chatterino accumulate Twitch channel points?"},{"location":"Help/#can-i-use-chatterino-as-my-chat-overlay-for-my-stream","text":"You definitely can, but it's not recommended. We suggest using a service similar to KapChat .","title":"Can I use Chatterino as my chat overlay for my stream?"},{"location":"Help/#why-are-my-messages-being-sent-in-webchat-but-not-in-chatterino","text":"There's a few things to cover here: If your message is not sent in Chatterino, it is likely not sent in webchat either. Webchat renders messages whether they are sent or not, Chatterino will only render the message if it is accepted by the server. If you're trying to type in a chat where there are a lot of active chatters, then your message may be dropped by Twitch's chat servers (due to the volume). If an alt account has been banned in that chat, you have likely been shadowbanned by Twitch in that channel. Which prevents any of your other accounts from speaking in that channel. If you have spammed too much in another chat, you have likely been temporarily shadowbanned by Twitch in channels where you are not: Subscribed, VIP or Moderator. If all else fails, you may be having connection issues to Twitch or your network may be blocking the necessary IRC ports in order to connect.","title":"Why are my messages being sent in webchat, but not in Chatterino?"},{"location":"Help/#chatterino-is-repeatedly-disconnecting-from-twitch-chat","text":"The most likely issue here is due to the large amount of channels you are connected to. The maximum channel limit is usually around the 100 mark, but may differ from user to user.","title":"Chatterino is repeatedly dis/connecting from Twitch chat"},{"location":"Help/#i-am-unable-to-send-whispers-from-chatterino","text":"If you are getting the Your settings prevent you from sending this whisper error message, it may be due to: You turning on the Block Whispers from Strangers option in your Twitch account security settings . Your account is too new to be able to whisper strangers. If you wish to whisper a user, you must first add them as a friend. This was a spam protection measure put in place by Twitch. This is not a Chatterino bug.","title":"I am unable to send whispers from Chatterino"},{"location":"Help/#ffzbttv-emotes-are-not-working","text":"You need to be logged in to see emotes. Try hitting F5 once to manually refresh the emotes. Chatterino only makes a connection to the necessary APIs to fetch these emotes, if you are still having issues fetching them, then your network may be blocking requests to those APIs.","title":"FFZ/BTTV emotes are not working"},{"location":"Help/#i-have-link-information-turned-on-but-am-unable-to-see-the-information-when-hovering-over-a-link","text":"The server (braize) used to fetch the link information may be down. Braize uptime can be found here . Your network may be having issues connecting to braize. Try restarting your PC and router.","title":"I have link information turned on, but am unable to see the information when hovering over a link"},{"location":"Help/#how-do-i-get-the-supporter-badge","text":"Donate \u20ac10 to fourtf here .","title":"How do I get the supporter badge?"},{"location":"Help/#login-expired-error","text":"If you're getting the Login expired for user <user>! Try adding your account again. error, simply re-add your account and it will start working again.","title":"Login expired error"},{"location":"Help/#how-do-i-add-chatterino-as-an-obs-dock","text":"This is not natively supported, but there is a work around: Add a dock into OBS for standard Twitch chat Turn on Always on top in Chatterino Click the 3 dots up the top of a channel split and click Popup Move and resize the chat to overlay on top of the standard Twitch chat","title":"How do I add Chatterino as an OBS dock?"},{"location":"Image%20Uploader/","text":"Image Uploader You can drag and drop images to Chatterino or paste them from clipboard to upload them to an external service. By default, the image uploader is turned off. You can enable by checking the Chatterino Settings -> External Tools -> Image Uploader -> Enable image uploader option and configuring per one of the below options. Note to advanced users: This module sends multipart-form requests via POST method, so uploading via SFTP/FTP won't work. However, popular hosts like imgur.com are s-ul.eu supported. Scroll down to see example cofiguration. Configuration Explanation Row Description Request URL Link to an API endpoint, which is requested by chatterino. Any needed URL parameters should be included here. Form field Name of a field, which contains image data. Extra headers Extra headers, that will be included in the request. Header name and value must be separated by colon ( : ). Multiple headers need to be separated with semicolons ( ; ). Example: Authorization: supaKey ; NextHeader: value . Image link Schema that tells where is the link in service's response. Leave empty if server's response is just the link itself. Refer to json properties by {property} . Supports dot-notation, example: {property.anotherProperty} . Deletion link Same as above. Examples i.nuuls.com Row Description Request URL https://i.nuuls.com/upload Form field attachment Other fields empty. imgur.com Row Description Request URL https://api.imgur.com/3/image Form field image Extra headers Authorization: Client-ID c898c0bb848ca39 Image link {data.link} Deletion link https://imgur.com/delete/{data.deletehash} s-ul.eu Replace XXXXXXXXXXXXXXX with your API key from s-ul.eu. It can be found on your account's configuration page . Row Description Request URL https://s-ul.eu/api/v1/upload?wizard=true&key=XXXXXXXXXXXXXXX Form field file Extra headers Image link {url} Deletion link https://s-ul.eu/delete.php?file={filename}&key=XXXXXXXXXXXXXXX i.fourtf.com This is not a hosted service, but rather a service that can be self-hosted. Click on the URL for more information. Replace XXXXXXXXXXXXXXX with your Base64-encoded user and password Row Description Request URL https://i.yourwebsite.com/upload Form field file Extra headers Authorization: Basic XXXXXXXXXXXXXXX Image link Deletion link","title":"Image Uploader"},{"location":"Image%20Uploader/#image-uploader","text":"You can drag and drop images to Chatterino or paste them from clipboard to upload them to an external service. By default, the image uploader is turned off. You can enable by checking the Chatterino Settings -> External Tools -> Image Uploader -> Enable image uploader option and configuring per one of the below options. Note to advanced users: This module sends multipart-form requests via POST method, so uploading via SFTP/FTP won't work. However, popular hosts like imgur.com are s-ul.eu supported. Scroll down to see example cofiguration.","title":"Image Uploader"},{"location":"Image%20Uploader/#configuration-explanation","text":"Row Description Request URL Link to an API endpoint, which is requested by chatterino. Any needed URL parameters should be included here. Form field Name of a field, which contains image data. Extra headers Extra headers, that will be included in the request. Header name and value must be separated by colon ( : ). Multiple headers need to be separated with semicolons ( ; ). Example: Authorization: supaKey ; NextHeader: value . Image link Schema that tells where is the link in service's response. Leave empty if server's response is just the link itself. Refer to json properties by {property} . Supports dot-notation, example: {property.anotherProperty} . Deletion link Same as above.","title":"Configuration Explanation"},{"location":"Image%20Uploader/#examples","text":"","title":"Examples"},{"location":"Image%20Uploader/#inuulscom","text":"Row Description Request URL https://i.nuuls.com/upload Form field attachment Other fields empty.","title":"i.nuuls.com"},{"location":"Image%20Uploader/#imgurcom","text":"Row Description Request URL https://api.imgur.com/3/image Form field image Extra headers Authorization: Client-ID c898c0bb848ca39 Image link {data.link} Deletion link https://imgur.com/delete/{data.deletehash}","title":"imgur.com"},{"location":"Image%20Uploader/#s-uleu","text":"Replace XXXXXXXXXXXXXXX with your API key from s-ul.eu. It can be found on your account's configuration page . Row Description Request URL https://s-ul.eu/api/v1/upload?wizard=true&key=XXXXXXXXXXXXXXX Form field file Extra headers Image link {url} Deletion link https://s-ul.eu/delete.php?file={filename}&key=XXXXXXXXXXXXXXX","title":"s-ul.eu"},{"location":"Image%20Uploader/#ifourtfcom","text":"This is not a hosted service, but rather a service that can be self-hosted. Click on the URL for more information. Replace XXXXXXXXXXXXXXX with your Base64-encoded user and password Row Description Request URL https://i.yourwebsite.com/upload Form field file Extra headers Authorization: Basic XXXXXXXXXXXXXXX Image link Deletion link","title":"i.fourtf.com"},{"location":"Regex/","text":"Regex Regular expressions (or short regexes ) are often used to check if a text matches a certain pattern. For example the regex ab?c would match abc or ac , but not abbc or 123 . In Chatterino, you can use them to highlight messages (and more) based on complex conditions. Basic patterns: Pattern Matches x? nothing or x x* x , repeated any number of times x+ x , repeated any number of times but at least 1 ^ The start of the text $ The end of the text x\\|y x or y You can group multiple statements with () : Pattern Matches asd? asd or as (asd)? asd or nothing \\(asd\\) (asd) , literally You can also group multiple characters with [] : Pattern Matches [xyz] x , y or z [1-5a-f] 1 , 2 , 3 , 4 , 5 , a , b , c , d , e , f [^abc] Anything, except a , b and c [\\-] - , literally (escaped with \\ ) \\[xyz\\] [xyz] , literally Special patterns: Pattern Matches \\d Digit characters (0-9) \\D Non-digit characters \\w Word characters (a-zA-Z0-9_) \\W Non-word characters \\s Spaces, tabs, etc. \\S Not spaces, tabs, etc. \\b Word boundaries (between \\w and \\W) \\B Non-word boundaries You can try out your regex pattern on websites like regex101 .","title":"Regex"},{"location":"Regex/#regex","text":"Regular expressions (or short regexes ) are often used to check if a text matches a certain pattern. For example the regex ab?c would match abc or ac , but not abbc or 123 . In Chatterino, you can use them to highlight messages (and more) based on complex conditions. Basic patterns: Pattern Matches x? nothing or x x* x , repeated any number of times x+ x , repeated any number of times but at least 1 ^ The start of the text $ The end of the text x\\|y x or y You can group multiple statements with () : Pattern Matches asd? asd or as (asd)? asd or nothing \\(asd\\) (asd) , literally You can also group multiple characters with [] : Pattern Matches [xyz] x , y or z [1-5a-f] 1 , 2 , 3 , 4 , 5 , a , b , c , d , e , f [^abc] Anything, except a , b and c [\\-] - , literally (escaped with \\ ) \\[xyz\\] [xyz] , literally Special patterns: Pattern Matches \\d Digit characters (0-9) \\D Non-digit characters \\w Word characters (a-zA-Z0-9_) \\W Non-word characters \\s Spaces, tabs, etc. \\S Not spaces, tabs, etc. \\b Word boundaries (between \\w and \\W) \\B Non-word boundaries You can try out your regex pattern on websites like regex101 .","title":"Regex"}]}